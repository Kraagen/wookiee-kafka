wookiee-kafka {
	manager = "com.webtrends.harness.component.kafka.KafkaManager"
	enabled = true
  dynamic-component = true
  app-name = "test"

	worker-class = "com.webtrends.harness.component.kafka.actor.PartitionConsumerWorker"
}

message-processor {
	# How often the MessageProcessor should share it's subscription information
	share-interval = 1s
	# When should MessageTopicProcessor instances be removed after there are no longer any subscribers for that topic
	trash-interval = 30s
	# The default send timeout
	default-send-timeout = 2s
}

worker-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 8
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 3.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 64
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 5
}
